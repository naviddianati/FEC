SIGNIFICANT CHANGES

Most importantly, Stage II disambiguation is completely overhauled. A different identity comparison paradigm is implemented where two candidate S1 identities are compared throughly, meaning, every pair of records within them is compared. The overall design of stageII.py has changed significantly. 

The matchin decision for stage II is now made based on a a bootstrapping methodology where an artificially generated set of S1 identities are compared, and the pairs known (by design) to be matches are recovered. Then, we "train" our verdict function such that a certain recall is achieved on this artificial set of matches. The results of this bootstrapping stage are exported to new data files which are loaded by a VerdictAuthority instance and used to define the verdict function.

The identity_adjacency table has a new format. The verdict columns are collapsed into simply one integer verdict column.

At the heart of the new identity comparison methodology is the funcion compare_list_of_identity_pairs in Disambiguator which uses a newly implemented compare() method of the Person class. This method rejects the obvious non-matches and for the rest, returns detailed results on the "best" matches between all pairs of records in the two identities, on the name, employer and occupation fields. These results will be used by the VerdictAuthority to render the final match decision.

The name parser used in Tokenizer is changed. I wrote a custom name parser of my own in utils.py that does a slightly better job of parsing names.

New ipython notebook started (StageII.ipynb) to experiment with the bootstrapping stage. Final versions of the methods in this notebook are integrated into stage2.py.t 

Versioning changed: We can now define which version of the data files (including MYSQL tables) to use, and independently, which version of disambiguated results to export to. Two separate parameters can be defined in config.py.

Percentages used to prune the affiliation graphs are now globally defined in config.py.
