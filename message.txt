MORE DETAILED BOOTSTRAPPING + OTHER IMPROVEMENTS

The bootstrapping now distinguishes between cases where name score is
3 and those where it's 4. For the latter, VerdictAuthority makes the
decision based on both name frequencies with and without the middle name.
for the former, we only have one name frequency, so a simple thresholding
is used to achieve the desired recall.

Both the bootstrapping methods and the VerdictAuthority are updated to
reflect the new approach.

Some idiots have words like "THE" and "AND" "HONORABLE" in their names,
like SEMBLER, MELVIN THE HONORA (What kind of a person calls himself
"the honorable?!").  Remove such junk from names first.

FECRetrieverByID() now populates the tmp_ tables faster by blocking.

Person's compare() now reports a pair if the max name score is 3 or more,
OR if the min score is -1 (middle name conflict). The latter shouldn't
simply be skipped. It's important information that will be used later.

Person's compare() also returns if affiliation scores are 2. Used to be 3
or more only.

Record's employer comparison now also looks for different permutations
of a common set of words in employer strings.

Record's name frequencies are repoerted differently depending on whether 
the name match score is 3 or 4. In the former, there is no point in
reporting the frequency "with middle name".

hashes.py stage 2 edgelist from file now doesn't prune as strictly.
Now that instead of record pairs we keep track of identity pair, even
2 occurrences of a pair is significant, so we only filter out pairs
that occur only once.

In tokenizing names, (utils.split_name), we also remove numerals
from the name.

New list chunking methods in utils.py. Both regular methods as
well as generators for each case.
Disambiguator now reports
